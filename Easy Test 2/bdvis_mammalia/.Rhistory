populated_columns <- colSums(is.na(sample) != nrow(sample))
populated_columns
typeof(populated_columns)
populated_columns[1]
populated_columns[1,1]
populated_columns[1,]
populated_columns[1][1]
populated_columns[2][1]
?all
all(is.na(mtcars$mpg))
remove_columns <- c()
flag = 0
sample <- formatted_us_mammal_georef_data.frame
for (column in 1:length(colnames(sample))) {
if(all(is.na(sample[, column]))) {
print(column)
}
}
sample[,94]
all(is.na(sample[,94]))
options(max.print = 100000)
sample[,94]
for (column in 1:length(colnames(sample))) {
if(all(is.na(sample[, column]))) {
print(column)
}
}
sample <- formatted_us_mammal_georef_data.frame
for (column in 1:length(colnames(sample))) {
if(!all(is.na(sample[, column]))) {
print(column)
}
}
sample[,100]
sample[,82]
sample[,42]
sample[,22]
sample[,20]
sample[,90]
sample[,102]
sample$sex
length(is.na(sample$sex))
length(is.na(sample$sex) == FALSE)
is.na(sample$sex) == FALSE
z <- sample(c(TRUE, FALSE), 1000, rep = TRUE)
z
length(z[z== TRUE])
z <- sample(c(TRUE, FALSE), 1000, rep = TRUE)
length(z[z== TRUE])
length(z[!is.na(sample$sex)])
length(z[!is.na(sample$key)])
nrow(sample)
remove_columns <- c()
sample <- formatted_us_mammal_georef_data.frame
for(column in 1:length(colnames(sample))) {
if(length(sample[!is.na(sample[, column])]) != nrow(sample)) {
print(column)
#remove_columns <- append(column, remove_columns)
}
}
is.na(sample[,94])
test <- formatted_us_mammal_georef_data.frame
remove_columns <- c()
test <- formatted_us_mammal_georef_data.frame
for(column in 1:length(colnames(test))) {
if(length(test[!is.na(test[, column])]) != nrow(test)) {
print(column)
#remove_columns <- append(column, remove_columns)
}
}
test
head(test, 1)
test[,2]
is.na(test[,2])
!is.na(test[,2])
test[!is.na(test[,2])]
length(!is.na(test[,2]))
remove_columns <- c()
test <- formatted_us_mammal_georef_data.frame
for(column in 1:length(colnames(test))) {
if(length(!is.na(test[, column])) != nrow(test)) {
print(column)
#remove_columns <- append(column, remove_columns)
}
}
nrow(test)
length(!is.na(test[, 1])) != nrow(test)
length(!is.na(test[, 2])) != nrow(test)
length(!is.na(test[, 94])) != nrow(test)
test[,94]
length(is.na(test[,94]))
sum(is.na(test[,94]))
sum(!is.na(test[,94]))
remove_columns <- c()
test <- formatted_us_mammal_georef_data.frame
for(column in 1:length(colnames(test))) {
if(sum(!is.na(test[, column])) != nrow(test)) {
print(column)
#remove_columns <- append(column, remove_columns)
}
}
remove_columns <- c()
test <- formatted_us_mammal_georef_data.frame
for(column in 1:length(colnames(test))) {
if(sum(!is.na(test[, column])) != nrow(test)) {
remove_columns <- append(column, remove_columns)
}
}
remove_columns
test <- test[, -remove_columns]
test
test[1,]
library('bdvis')
bdsummary(test)
chronohorogram(test)
# mapgrid
mapgrid(test,
ptype="records",
bbox=c(60,100,5,40),
region=c("United States"))
?raw
is.raw(test)
is.raw(test$key)
as.raw(test$key)
as.raw(test)
charToRaw("Hello Wordl")
as.raw(test$key[1])
test$key[1]
colnames(test)
as.raw(test$month)
z <- c(NA, NA, NA, NA, NA)
z
is.na(z)
as.raw(z)
z <- c(z, "Hello")
z
as.raw(z)
charToRaw(z)
charToRaw(z[6])
charToRaw("Hello")
# mapgrid
mapgrid(test,
ptype="records",
bbox=c(60,100,5,40),
region=c("United States"))
typeof(test)
typeof(test$key)
typeof(as.raw(test$key))
(as.raw(test$key))
charToRaw(test$key)
test[,1]
head(test[,1])
head(test[,1:5])
head(test[,1:5])
test1 <- head(test[,1:5])
lapply(test1, typeof)
lapply(test, typeof)
?chronohorogram
as.raw(TRUE)
as.raw(FALSE)
as.raw(24)
as.raw(2400)
as.raw(240)
as.raw(24.02)
as.raw(24.0432)
as.raw(14.0432)
?packBits
x <- "A test string"
(y <- charToRaw(x))
as.raw("A test string")
is.vector(y) # TRUE
typeof(y)
rawToChar(y)
rawToChar(y, multiple = TRUE)
(xx <- c(y,  charToRaw("&"), charToRaw("more")))
rawToChar(xx)
rawShift(y, 1)
y
rawToBits(y)
rawShift(y, -2)
numToBits(1)
intToBits(32)
?raw
?packBits
packBits("Hello World", type = "character")
packBits(23, type = "integer")
packBits(23L, type = "integer")
typeof(23)
typeof(23L)
packBits(64L, type = "integer")
packBits(32L, type = "integer")
sample_data <- get_inat_obs(taxon_name = "Ambystoma maculatum")
library('rinat')
sample_data <- get_inat_obs(taxon_name = "Ambystoma maculatum")
f_sample_data <- format_bdvis(indf = sample_data, source = "rinat")
head(f_sample_data, 5)
bdsummary(f_sample_data)
chronohorogram(indf = f_sample_data)
colNames(f_sample_data)
colName(f_sample_data)
colnames(f_sample_data)
typeof(f_sample_data$Longitude)
head(f_sample_data, 1)
typeof(f_sample_data)
f_sample_data[[1]]
f_sample_data[[1]][1]
f_sample_data$scientific_name
typeof(f_sample_data)
typeof(f_sample_data[[1]])
?occ_data
library('rgbif')
?occ_data
typeof(mam_us_georef)
nrow(mam_us_georef)
length(mam_us_georef)
mam_us_georef[1]
mam_us_georef[2]
names(mam_us_georef)
typeof(mam_us_georef[1])
typeof(mam_us_georef[2])
typeof(mam_us_georef[3])
typeof(mam_us_georef[4])
typeof(mam_us_georef[5])
(mam_us_georef[3]
mam_us_georef[3]
mam_us_georef[3]
mam_us_georef[3]
mam_us_georef
as.data.frame(mam_us_georef)
as.data.frame(mam_us_georef$data)
head(mam_us_georef$data. 2)
head(mam_us_georef$data, 2)
head(mam_us_georef$data, 2)
nrow(mam_us_georef$data)
nrow(as.data.frame(mam_us_georef)$data)
nrow(as.data.frame(mam_us_georef$data))
luckyChance <- as.data.frame(mam_us_georef$data)
nrow(luckyChance)
format_bdvis(luckyChance, source = "rgbif")
luckyChance <- as.data.frame(mam_us_georef$data)
head(luckyChance, 1)
nrow(luckyChance)
ncol(luckyChance)
bdLuckyChance <- format_bdvis(luckyChance, source = "rgbif")
head(bdLuckyChance, 2)
bdsummary(indf = bdLuckyChance)
chronohorogram(indf = bdLuckyChance)
# tempolar
tempolar(bdLuckyChance,
color="green",
title="US Mammals daily",
plottype="r",
timescale="d")
print(num_of_reqd_records)
# tempolar
tempolar(mam_us_georef_df_formatted,
color="green",
title="US Mammals daily",
plottype="r",
timescale="d")
# Coercing the received data(gbif class) into a data frame
mam_us_georef_df <- as.data.frame(mam_us_georef$data)
# Changing the above data frame to required formate
mam_us_georef_df_formatted <- format_bdvis(mam_us_georef_df,
source = "rgbif")
# Checking out the new data.frame
head(mam_us_georef_df_formatted, 2)
# Summary of the downloaded data
mam_data_summary <- bdsummary(indf = mam_us_georef_df_formatted)
# tempolar
tempolar(mam_us_georef_df_formatted,
color="green",
title="US Mammals daily",
plottype="r",
timescale="d")
tempolar(mam_us_georef_df_formatted,
color="blue",
title="US Mammals weekly",
plottype="p",
timescale="w")
tempolar(mam_us_georef_df_formatted,
color="red",
title="US Mammals monthly",
plottype="r",
timescale="m")
# taxotree
taxo_formatted_us_mammal_georef_data.frame <- gettaxo(mam_us_georef_df_formatted)
taxotree(taxo_formatted_us_mammal_georef_data.frame)
# chronohorogram
chronohorogram(mam_us_georef_df_formatted)
# mapgrid
mapgrid(mam_us_georef_df_formatted,
ptype="records",
bbox=c(60,100,5,40),
region=c("United States"))
# mapgrid
mapgrid(mam_us_georef_df_formatted,
ptype="records",
bbox=c(60,100,5,40),
region="United States")
?mapgrid
# mapgrid
mapgrid(mam_us_georef_df_formatted,
ptype="records",
bbox=c(60,100,5,40))
# mapgrid
mapgrid(mam_us_georef_df_formatted,
ptype="records",
bbox=c(60,100,5,40),
region = "US")
mapgrid(mam_us_georef_df_formatted,
ptype="records",
bbox=c(60,100,5,40),
region=c("US"),gridscale=0.1)
# bdcalendarheat
bdcalendarheat(mam_us_georef_df_formatted)
gettaxo(mam_us_georef_df_formatted[1])
install.packages("taxotools")
library('taxotools')
taxotools::list_higher_taxo(indf = mam_us_georef_df_formatted)
?taxotools::list_higher_taxo()
colnames(mam_us_georef_df_formatted)
taxotools::list_higher_taxo(indf = mam_us_georef_df_formatted, canonical = "scientificName")
taxotools::list_higher_taxo(indf = mam_us_georef_df_formatted, canonical = "Scientific_name")
taxize::use_entrez()
shiny::runApp('C:/Users/Rahul/Desktop/GSoC2021/bdvis_mammalia')
runApp('C:/Users/Rahul/Desktop/GSoC2021/test')
?c
setwd("C:/Users/Rahul/Desktop/GSoC2021/bdvis_mammalia")
write.csv(mam_us_georef_df_formatted, "./mammal_data.csv")
mammal_data <- read.csv("./mammal_data.csv")
?renderDT
typeof(mammal_data)
as.data.frame(mammal_data)
runApp()
runApp()
mam_data_summary
mam_data_summary
mam_data_summary
# Coercing the received data(gbif class) into a data frame
mam_us_georef_df <- as.data.frame(mam_us_georef$data)
mam_us_georef_df
mam_data_summary
# Summary of the downloaded data
mam_data_summary <- bdsummary(indf = mam_us_georef_df_formatted)
runApp()
?chronohorogram
chronohorogram(as.data.frame(read.csv("./mammal_data.csv")))
?chronohorogram
runApp()
install.packages('bdvis')
install.packages('bdvis')
shiny::runApp()
mammal_data[1,1]
mammal_data[1,2]
mammal_data[1,3]
bdvis::chronohorogram(indf = as.data.frame(mammal_data),
title = "US Mammal Data Chronohorogram")
runApp()
runApp()
?renderValueBox
?valueBox
?chronohorogram
runApp()
# tempolar
tempolar(mam_us_georef_df_formatted,
color="green",
title="US Mammals daily",
plottype="r",
timescale="day")
?c
# tempolar
tempolar(mam_us_georef_df_formatted,
color="green",
title="US Mammals daily",
plottype="r",
timescale="day")
# chronohorogram
chronohorogram(mam_us_georef_df_formatted)
# mapgrid
mapgrid(mam_us_georef_df_formatted,
ptype="records",
bbox=c(60,100,5,40),
region = "US")
bdsummary(mam_us_georef_df_formatted)
?mapgrid
# mapgrid
mapgrid(mam_us_georef_df_formatted,
ptype="records",
bbox=c(18,-162,-65,-70),
region = "US")
# mapgrid
mapgrid(mam_us_georef_df_formatted,
ptype="records",
region = "US")
# mapgrid
mapgrid(mam_us_georef_df_formatted,
ptype="records",
bbox=c(18,20,-65,-70),
region = "US")
# mapgrid
mapgrid(mam_us_georef_df_formatted,
ptype="records",
bbox=c(10,20,-65,-70),
region = "US")
# mapgrid
mapgrid(mam_us_georef_df_formatted,
ptype="records",
bbox=c(1,20,-65,-70),
region = "US")
# mapgrid
mapgrid(mam_us_georef_df_formatted,
ptype="records",
region = "US")
# mapgrid
mapgrid(mam_us_georef_df_formatted,
ptype="records",
bbox=c(60,100,5,40),
region = "US")
mapgrid(mam_us_georef_df_formatted,
ptype="records",
bbox=c(60,100,5,40),
region=c("US"),
gridscale=0.1)
mapgrid(mam_us_georef_df_formatted,
ptype="records",
region=c("US"),
gridscale=0.1)
mapgrid(mam_us_georef_df_formatted,
ptype="records",
region=c("US"),
gridscale=10)
mapgrid(mam_us_georef_df_formatted,
ptype="records",
region=c("US"),
gridscale=1000)
mapgrid(mam_us_georef_df_formatted,
ptype="records",
region=c("US"),
gridscale=100)
mapgrid(mam_us_georef_df_formatted,
ptype="records",
region=c("US"),
gridscale=10)
mapgrid(mam_us_georef_df_formatted,
ptype="records",
region=c("US"),
gridscale=0.001)
mapgrid(mam_us_georef_df_formatted,
ptype="records",
region=c("US"),
gridscale=0.000001)
# tempolar
tempolar(mam_us_georef_df_formatted,
color="green",
title="US Mammals daily",
plottype="r",
timescale="d")
# tempolar
tempolar(mam_us_georef_df_formatted,
color="green",
title="US Mammals daily",
plottype="r",
timescale="day")
tempolar(mam_us_georef_df_formatted,
color="blue",
title="US Mammals weekly",
plottype="p",
timescale="week")
tempolar(mam_us_georef_df_formatted,
color="blue",
title="US Mammals weekly",
plottype="p",
timescale="w")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?bdvis::mapgrid
mapgrid(mam_us_georef_df_formatted,
ptype="presence",
bbox=c(60,100,5,40),
region=c("US"),
gridscale=0.1)
?bdvis::mapgrid
mapgrid(mam_us_georef_df_formatted,
ptype="complete",
bbox=c(60,100,5,40),
region=c("US"),
gridscale=0.1)
bdcomplete(indf = mam_us_georef_df_formatted)
mapgrid(mam_us_georef_df_formatted,
comp = bdcomplete(indf = as.data.frame(mammal_data)),
ptype="complete",
bbox=c(60,100,5,40),
region=c("US"),
gridscale=0.1)
runApp()
runApp()
?mapgrid
runApp()
runApp()
runApp()
?read.csv
runApp()
runApp()
runApp()
